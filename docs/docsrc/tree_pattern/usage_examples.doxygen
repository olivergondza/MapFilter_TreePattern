/**
@page		treepatternusageexamples	TreePattern Usage Examples

@section	exwhitelists	Whitelists

@subsection	exexclusive	Exclusive Whitelist

This simple example shows how to create simple whitelist allowing occurrence
of just one of defined attributes.  <tt>my_utility -h -v -o a.out</tt>

@snippet User/Trivial.test.php testSimpleOneWhitelist

Filtered query now contains just <tt>-h</tt> option since patterns prevents
occurence of not declared options and enforces existence of either <tt>-v</tt>
or <tt>-h</tt>. Whenever <tt>-v</tt> and <tt>-h</tt> passed simultaneously
<tt>-h</tt> is picked since it is declared earlier in the one element.

@subsection	exsimple	Simple Whitelist

Let's assume the same query with slightly modified pattern.

@snippet User/Trivial.test.php testSimpleOptWhitelist

This is the way to enable occurrence of more options (including 0). The same
query will now contain both <tt>-h</tt> and <tt>-v</tt> option regardless of
their order.

@subsection	exfullsets	Full Sets

Sometimes it's useful to specify a group of attributes that all must occur simultaneously.
<tt>my_app -f main.c -o a.out</tt>

@snippet User/Trivial.test.php testSimpleAllWhitelist

Since we have got all the arguments, they all pass our filter. Let's try to
run the binary without source file.  <tt>my_app -o a.out</tt>

A filtered query would be empty because our pattern demands occurrence of both
(all) options.
*/
